<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xsi:schemaLocation="http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket-4.3.xsd
		http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">
		
	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="com.kh.spring" /> <!-- 프로젝트 기준이 되는 패키지 -->

	<!-- HttpSessionHandshakeInterceptor를 사용하지 않으면 세션(웹소켓세션) 활용이 어려워지고 해당 세션을 기반으로 작업할 수 없다. -->
	<websocket:handlers>
		<!-- WebSocket 핸들러를 정의하는 루트 엘리먼트 -->
		<websocket:mapping handler="chatServer" path="/server"     />
		<!-- HttpSessionHandshakeInterceptor를 정의 -->
		<websocket:handshake-interceptors>
	  		<beans:bean class="org.springframework.web.socket.server.support.HttpSessionHandshakeInterceptor"></beans:bean>
	  	</websocket:handshake-interceptors>
	</websocket:handlers>

	<!-- 
		사용자가 어떤 url로 요청 시 해당문서가 읽혀진다고 생각하면 된다.
		
		handlerMapping을 통해서 해당 url로 요청이 오면 어떤 Controller를 구동시킬건지 찾아내야한다. => 요청값에 적합한 controller실행
		
		1. 요청될 때마다 실행될 Controller클래스들을 bean으로 등록
		<beans:bean class="com.kh.spring.member.controller.MemberController" id="loginController" />
		
		2. 어떤 url로 요청시 어떤 Controller를 구동시킬 것인지 맵핑(handlerMapping) 시켜줘야 함
		<beans:bean class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping">
			<bean:property name="mapping">
				<beans:prop key="login.me">loginController</beans:prop>
			</bean>
		</beans:bean>
		
	 -->
	 <interceptors>
	 	<interceptor>
	 		<mapping path="/myPage.me" />
	 		<mapping path="/enrollForm.bo" />
	 		<beans:bean class="com.kh.spring.common.intercepter.LoginIntercepter" id="LoginIntercepter" />
	 	</interceptor>
	 </interceptors>
</beans:beans>
